/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package org.w3c.css.flute.parser;
import java.io.*;
import java.net.*;
import java.util.Locale;
import org.w3c.css.sac.ConditionFactory;
import org.w3c.css.sac.Condition;
import org.w3c.css.sac.SelectorFactory;
import org.w3c.css.sac.SelectorList;
import org.w3c.css.sac.Selector;
import org.w3c.css.sac.SimpleSelector;
import org.w3c.css.sac.DocumentHandler;
import org.w3c.css.sac.InputSource;
import org.w3c.css.sac.ErrorHandler;
import org.w3c.css.sac.CSSException;
import org.w3c.css.sac.CSSParseException;
import org.w3c.css.sac.Locator;
import org.w3c.css.sac.LexicalUnit;
import org.w3c.flute.parser.selectors.SelectorFactoryImpl;
import org.w3c.flute.parser.selectors.ConditionFactoryImpl;
import org.w3c.flute.util.Encoding;

public class ParserTokenManager implements ParserConstants
{
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x200000L) != 0L)
            return 335;
         if ((active0 & 0x3e00000000000000L) != 0L)
            return 48;
         return -1;
      case 1:
         if ((active0 & 0x3e00000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 1;
            return 336;
         }
         return -1;
      case 2:
         if ((active0 & 0x3e00000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 2;
            return 336;
         }
         return -1;
      case 3:
         if ((active0 & 0x3e00000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 3;
            return 336;
         }
         return -1;
      case 4:
         if ((active0 & 0x2e00000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 4;
            return 336;
         }
         if ((active0 & 0x1000000000000000L) != 0L)
            return 336;
         return -1;
      case 5:
         if ((active0 & 0x2a00000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 5;
            return 336;
         }
         if ((active0 & 0x400000000000000L) != 0L)
            return 336;
         return -1;
      case 6:
         if ((active0 & 0x2800000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 6;
            return 336;
         }
         if ((active0 & 0x200000000000000L) != 0L)
            return 336;
         return -1;
      case 7:
         if ((active0 & 0x2000000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 7;
            return 336;
         }
         if ((active0 & 0x800000000000000L) != 0L)
            return 336;
         return -1;
      case 8:
         if ((active0 & 0x2000000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 8;
            return 336;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 23);
      case 41:
         return jjStopAtPos(0, 22);
      case 42:
         return jjStopAtPos(0, 20);
      case 43:
         return jjStopAtPos(0, 12);
      case 44:
         return jjStopAtPos(0, 14);
      case 45:
         jjmatchedKind = 13;
         return jjMoveStringLiteralDfa1_0(0x40L);
      case 46:
         return jjStartNfaWithStates_0(0, 21, 335);
      case 47:
         jjmatchedKind = 17;
         return jjMoveStringLiteralDfa1_0(0x4L);
      case 58:
         return jjStopAtPos(0, 24);
      case 59:
         return jjStopAtPos(0, 15);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x20L);
      case 61:
         return jjStopAtPos(0, 11);
      case 62:
         return jjStopAtPos(0, 16);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x3e00000000000000L);
      case 91:
         return jjStopAtPos(0, 18);
      case 93:
         return jjStopAtPos(0, 19);
      case 123:
         return jjStopAtPos(0, 7);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x200L);
      case 125:
         return jjStopAtPos(0, 8);
      case 126:
         return jjMoveStringLiteralDfa1_0(0x400L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x20L);
      case 42:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x40L);
      case 61:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(1, 9);
         else if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(1, 10);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x20L);
      case 62:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(2, 6);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(3, 5);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 60, 336);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private final int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000000L);
      case 65:
      case 97:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 58, 336);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
private final int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0x2000000000000000L);
      case 84:
      case 116:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 57, 336);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0);
}
private final int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x2000000000000000L);
      case 84:
      case 116:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 59, 336);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0);
}
private final int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0);
}
private final int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 61, 336);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 335;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 336:
               case 49:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(148, 151);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(145, 147);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(143, 144);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(140, 142);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(135, 139);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(131, 134);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(127, 130);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(124, 126);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(121, 123);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(118, 120);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(115, 117);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(112, 114);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(109, 111);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(106, 108);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(103, 105);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(101, 102);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     jjCheckNAdd(100);
                  }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     jjCheckNAddStates(3, 74);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(75, 92);
                  else if (curChar == 33)
                     jjCheckNAddTwoStates(67, 76);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(37, 38);
                  else if (curChar == 39)
                     jjCheckNAddStates(93, 96);
                  else if (curChar == 34)
                     jjCheckNAddStates(97, 100);
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 34)
                     jjCheckNAddStates(97, 100);
                  break;
               case 3:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 4:
                  if (curChar == 34 && kind > 34)
                     kind = 34;
                  break;
               case 6:
                  if (curChar == 12)
                     jjCheckNAddStates(97, 100);
                  break;
               case 8:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(101, 106);
                  break;
               case 10:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(107, 115);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(116, 120);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(121, 126);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(127, 133);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(134, 141);
                  break;
               case 16:
                  if (curChar == 13)
                     jjCheckNAddStates(97, 100);
                  break;
               case 17:
                  if (curChar == 10)
                     jjCheckNAddStates(97, 100);
                  break;
               case 18:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 39)
                     jjCheckNAddStates(93, 96);
                  break;
               case 20:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(93, 96);
                  break;
               case 21:
                  if (curChar == 39 && kind > 34)
                     kind = 34;
                  break;
               case 23:
                  if (curChar == 12)
                     jjCheckNAddStates(93, 96);
                  break;
               case 25:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(93, 96);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(142, 147);
                  break;
               case 27:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(93, 96);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(148, 156);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(157, 161);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(162, 167);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(168, 174);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(175, 182);
                  break;
               case 33:
                  if (curChar == 13)
                     jjCheckNAddStates(93, 96);
                  break;
               case 34:
                  if (curChar == 10)
                     jjCheckNAddStates(93, 96);
                  break;
               case 35:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 37:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 39:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(183, 186);
                  break;
               case 41:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(187, 193);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(194, 196);
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(197, 200);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(201, 205);
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(206, 211);
                  break;
               case 51:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(212, 215);
                  break;
               case 53:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(216, 222);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(223, 225);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(226, 229);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(230, 234);
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(235, 240);
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(241, 244);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(245, 251);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(252, 254);
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(255, 258);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(259, 263);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(264, 269);
                  break;
               case 66:
                  if (curChar == 33)
                     jjCheckNAddTwoStates(67, 76);
                  break;
               case 67:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(67, 76);
                  break;
               case 78:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(78, 79);
                  break;
               case 80:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(78, 79);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(270, 273);
                  break;
               case 82:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(78, 79);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(274, 280);
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(281, 283);
                  break;
               case 85:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(284, 287);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(288, 292);
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(293, 298);
                  break;
               case 88:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(299, 301);
                  break;
               case 89:
                  if (curChar == 40 && kind > 74)
                     kind = 74;
                  break;
               case 91:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(299, 301);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(302, 306);
                  break;
               case 93:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(299, 301);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(307, 314);
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(315, 318);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(319, 323);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(324, 329);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(330, 336);
                  break;
               case 99:
                  if (curChar == 46)
                     jjCheckNAddStates(75, 92);
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(100);
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(101, 102);
                  break;
               case 102:
                  if (curChar == 37 && kind > 39)
                     kind = 39;
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(103, 105);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(106, 108);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(109, 111);
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(112, 114);
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(115, 117);
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(118, 120);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(121, 123);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(124, 126);
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(127, 130);
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(131, 134);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(135, 139);
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(140, 142);
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(143, 144);
                  break;
               case 145:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(145, 147);
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(148, 151);
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 154:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(154, 155);
                  break;
               case 156:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(154, 155);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(337, 340);
                  break;
               case 158:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(154, 155);
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(341, 347);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(348, 350);
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(351, 354);
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(355, 359);
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(360, 365);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(366, 369);
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(370, 376);
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(377, 379);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(380, 383);
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(384, 388);
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(389, 394);
                  break;
               case 172:
                  if (curChar == 40)
                     jjCheckNAddStates(395, 400);
                  break;
               case 173:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(401, 404);
                  break;
               case 174:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(174, 175);
                  break;
               case 175:
                  if (curChar == 41 && kind > 38)
                     kind = 38;
                  break;
               case 177:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(401, 404);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(405, 409);
                  break;
               case 179:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(401, 404);
                  break;
               case 180:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(410, 417);
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(418, 421);
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(422, 426);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(427, 432);
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(433, 439);
                  break;
               case 185:
                  if (curChar == 39)
                     jjCheckNAddStates(440, 443);
                  break;
               case 186:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(440, 443);
                  break;
               case 187:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(174, 175);
                  break;
               case 189:
                  if (curChar == 12)
                     jjCheckNAddStates(440, 443);
                  break;
               case 191:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(440, 443);
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(444, 449);
                  break;
               case 193:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(440, 443);
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(450, 458);
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(459, 463);
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(464, 469);
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(470, 476);
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(477, 484);
                  break;
               case 199:
                  if (curChar == 13)
                     jjCheckNAddStates(440, 443);
                  break;
               case 200:
                  if (curChar == 10)
                     jjCheckNAddStates(440, 443);
                  break;
               case 201:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if (curChar == 34)
                     jjCheckNAddStates(485, 488);
                  break;
               case 203:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(485, 488);
                  break;
               case 204:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(174, 175);
                  break;
               case 206:
                  if (curChar == 12)
                     jjCheckNAddStates(485, 488);
                  break;
               case 208:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(485, 488);
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(489, 494);
                  break;
               case 210:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(485, 488);
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(495, 503);
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(504, 508);
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(509, 514);
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(515, 521);
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(522, 529);
                  break;
               case 216:
                  if (curChar == 13)
                     jjCheckNAddStates(485, 488);
                  break;
               case 217:
                  if (curChar == 10)
                     jjCheckNAddStates(485, 488);
                  break;
               case 218:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(530, 536);
                  break;
               case 222:
                  if (curChar == 43)
                     jjAddStates(537, 538);
                  break;
               case 223:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 224:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddStates(539, 542);
                  break;
               case 225:
                  if (curChar == 63 && kind > 73)
                     kind = 73;
                  break;
               case 226:
               case 241:
               case 245:
               case 248:
               case 251:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAdd(225);
                  break;
               case 227:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(225, 226);
                  break;
               case 228:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddStates(543, 545);
                  break;
               case 229:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjAddStates(546, 551);
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 231:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(233);
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAdd(225);
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 243:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 244:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(225, 245);
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 247:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddStates(552, 554);
                  break;
               case 249:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(225, 248);
                  break;
               case 250:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddStates(555, 558);
                  break;
               case 252:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(225, 251);
                  break;
               case 253:
                  if (curChar != 63)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddStates(559, 561);
                  break;
               case 254:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(256, 262);
                  break;
               case 256:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddStates(562, 565);
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAdd(233);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(233, 259);
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddStates(566, 568);
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(569, 573);
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(256);
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(263, 256);
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(574, 576);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(577, 580);
                  break;
               case 268:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(581, 584);
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(585, 591);
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(592, 594);
                  break;
               case 271:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(595, 598);
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(599, 603);
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(604, 609);
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(610, 614);
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(615, 622);
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(623, 626);
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(627, 631);
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(632, 637);
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(638, 644);
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(3, 74);
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(281);
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(282, 283);
                  break;
               case 283:
                  if (curChar == 46)
                     jjCheckNAdd(100);
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(284, 102);
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(285, 286);
                  break;
               case 286:
                  if (curChar == 46)
                     jjCheckNAdd(101);
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(287, 105);
                  break;
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(288, 289);
                  break;
               case 289:
                  if (curChar == 46)
                     jjCheckNAdd(103);
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(290, 108);
                  break;
               case 291:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  break;
               case 292:
                  if (curChar == 46)
                     jjCheckNAdd(106);
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(293, 111);
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  break;
               case 295:
                  if (curChar == 46)
                     jjCheckNAdd(109);
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 114);
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(297, 298);
                  break;
               case 298:
                  if (curChar == 46)
                     jjCheckNAdd(112);
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(299, 117);
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(300, 301);
                  break;
               case 301:
                  if (curChar == 46)
                     jjCheckNAdd(115);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(302, 120);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 304);
                  break;
               case 304:
                  if (curChar == 46)
                     jjCheckNAdd(118);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(305, 123);
                  break;
               case 306:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(306, 307);
                  break;
               case 307:
                  if (curChar == 46)
                     jjCheckNAdd(121);
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(308, 126);
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(309, 310);
                  break;
               case 310:
                  if (curChar == 46)
                     jjCheckNAdd(124);
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 130);
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(312, 313);
                  break;
               case 313:
                  if (curChar == 46)
                     jjCheckNAdd(127);
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(314, 134);
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(315, 316);
                  break;
               case 316:
                  if (curChar == 46)
                     jjCheckNAdd(131);
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(317, 139);
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(318, 319);
                  break;
               case 319:
                  if (curChar == 46)
                     jjCheckNAdd(135);
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(320, 142);
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(321, 322);
                  break;
               case 322:
                  if (curChar == 46)
                     jjCheckNAdd(140);
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(323, 144);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(324, 325);
                  break;
               case 325:
                  if (curChar == 46)
                     jjCheckNAdd(143);
                  break;
               case 326:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(326, 147);
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(327, 328);
                  break;
               case 328:
                  if (curChar == 46)
                     jjCheckNAdd(145);
                  break;
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(329, 151);
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(330, 331);
                  break;
               case 331:
                  if (curChar == 46)
                     jjCheckNAdd(148);
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(645, 647);
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(333, 334);
                  break;
               case 334:
                  if (curChar == 46)
                     jjCheckNAdd(152);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 336:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 62)
                        kind = 62;
                     jjCheckNAddTwoStates(49, 50);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(51, 52);
                  break;
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAddStates(648, 652);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(653, 656);
                  else if (curChar == 64)
                     jjAddStates(657, 658);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(659, 661);
                  break;
               case 48:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 62)
                        kind = 62;
                     jjCheckNAddTwoStates(49, 50);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(51, 60);
                  break;
               case 3:
               case 8:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 5:
                  if (curChar == 92)
                     jjAddStates(662, 665);
                  break;
               case 7:
                  if (curChar == 92)
                     jjAddStates(666, 667);
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(101, 106);
                  break;
               case 11:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(107, 115);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(116, 120);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(121, 126);
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(127, 133);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(134, 141);
                  break;
               case 20:
               case 25:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(93, 96);
                  break;
               case 22:
                  if (curChar == 92)
                     jjAddStates(668, 671);
                  break;
               case 24:
                  if (curChar == 92)
                     jjAddStates(672, 673);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(142, 147);
                  break;
               case 28:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(148, 156);
                  break;
               case 29:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(157, 161);
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(162, 167);
                  break;
               case 31:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(168, 174);
                  break;
               case 32:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(175, 182);
                  break;
               case 37:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if (curChar == 92)
                     jjAddStates(674, 675);
                  break;
               case 39:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 40:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(183, 186);
                  break;
               case 42:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(187, 193);
                  break;
               case 43:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(194, 196);
                  break;
               case 44:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(197, 200);
                  break;
               case 45:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(201, 205);
                  break;
               case 46:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(206, 211);
                  break;
               case 47:
                  if (curChar == 64)
                     jjAddStates(657, 658);
                  break;
               case 49:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 50:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(51, 52);
                  break;
               case 51:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 52:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(212, 215);
                  break;
               case 54:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(216, 222);
                  break;
               case 55:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(223, 225);
                  break;
               case 56:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(226, 229);
                  break;
               case 57:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(230, 234);
                  break;
               case 58:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(235, 240);
                  break;
               case 59:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(51, 60);
                  break;
               case 60:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(241, 244);
                  break;
               case 61:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(245, 251);
                  break;
               case 62:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(252, 254);
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(255, 258);
                  break;
               case 64:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(259, 263);
                  break;
               case 65:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(264, 269);
                  break;
               case 68:
                  if ((0x10000000100000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 69:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(648, 652);
                  break;
               case 78:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(78, 79);
                  break;
               case 79:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(80, 81);
                  break;
               case 80:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(78, 79);
                  break;
               case 81:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(270, 273);
                  break;
               case 83:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(274, 280);
                  break;
               case 84:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(281, 283);
                  break;
               case 85:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(284, 287);
                  break;
               case 86:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(288, 292);
                  break;
               case 87:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(293, 298);
                  break;
               case 88:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(299, 301);
                  break;
               case 90:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 91:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(299, 301);
                  break;
               case 92:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(302, 306);
                  break;
               case 94:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(307, 314);
                  break;
               case 95:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(315, 318);
                  break;
               case 96:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(319, 323);
                  break;
               case 97:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(324, 329);
                  break;
               case 98:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(330, 336);
                  break;
               case 104:
                  if ((0x10000000100000L & l) != 0L && kind > 40)
                     kind = 40;
                  break;
               case 105:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 107:
                  if ((0x200000002000L & l) != 0L && kind > 41)
                     kind = 41;
                  break;
               case 108:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 110:
                  if ((0x200000002000L & l) != 0L && kind > 42)
                     kind = 42;
                  break;
               case 111:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 113:
                  if ((0x800000008L & l) != 0L && kind > 43)
                     kind = 43;
                  break;
               case 114:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 116:
                  if ((0x400000004000L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 117:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 119:
                  if ((0x100000001000000L & l) != 0L && kind > 45)
                     kind = 45;
                  break;
               case 120:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 122:
                  if ((0x200000002000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 123:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 125:
                  if ((0x100000001000000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 126:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 128:
                  if ((0x8000000080L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 129:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 132:
                  if ((0x1000000010L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 133:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 136:
                  if ((0x1000000010L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 137:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 141:
                  if ((0x8000000080000L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 142:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 144:
                  if ((0x8000000080000L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 146:
                  if ((0x400000004000000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 147:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 149:
                  if ((0x400000004000000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 150:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 153:
               case 154:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(154, 155);
                  break;
               case 155:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(156, 157);
                  break;
               case 156:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(154, 155);
                  break;
               case 157:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(337, 340);
                  break;
               case 159:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(341, 347);
                  break;
               case 160:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(348, 350);
                  break;
               case 161:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(351, 354);
                  break;
               case 162:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(355, 359);
                  break;
               case 163:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(360, 365);
                  break;
               case 164:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(156, 165);
                  break;
               case 165:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(366, 369);
                  break;
               case 166:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(370, 376);
                  break;
               case 167:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(377, 379);
                  break;
               case 168:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(380, 383);
                  break;
               case 169:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(384, 388);
                  break;
               case 170:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(389, 394);
                  break;
               case 171:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(659, 661);
                  break;
               case 173:
               case 177:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(401, 404);
                  break;
               case 176:
                  if (curChar == 92)
                     jjAddStates(676, 677);
                  break;
               case 178:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(405, 409);
                  break;
               case 180:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(410, 417);
                  break;
               case 181:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(418, 421);
                  break;
               case 182:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(422, 426);
                  break;
               case 183:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(427, 432);
                  break;
               case 184:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(433, 439);
                  break;
               case 186:
               case 191:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(440, 443);
                  break;
               case 188:
                  if (curChar == 92)
                     jjAddStates(678, 681);
                  break;
               case 190:
                  if (curChar == 92)
                     jjAddStates(682, 683);
                  break;
               case 192:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(444, 449);
                  break;
               case 194:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(450, 458);
                  break;
               case 195:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(459, 463);
                  break;
               case 196:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(464, 469);
                  break;
               case 197:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(470, 476);
                  break;
               case 198:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(477, 484);
                  break;
               case 203:
               case 208:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(485, 488);
                  break;
               case 205:
                  if (curChar == 92)
                     jjAddStates(684, 687);
                  break;
               case 207:
                  if (curChar == 92)
                     jjAddStates(688, 689);
                  break;
               case 209:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(489, 494);
                  break;
               case 211:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(495, 503);
                  break;
               case 212:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(504, 508);
                  break;
               case 213:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(509, 514);
                  break;
               case 214:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(515, 521);
                  break;
               case 215:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(522, 529);
                  break;
               case 220:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 221:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 229:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjAddStates(546, 551);
                  break;
               case 230:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 231:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 232:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(233);
                  break;
               case 233:
                  if ((0x7e0000007eL & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 234:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 235:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 236:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 237:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 238:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 239:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 240:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 242:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 243:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 255:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(256, 262);
                  break;
               case 257:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 258:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddStates(562, 565);
                  break;
               case 259:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAdd(233);
                  break;
               case 260:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(233, 259);
                  break;
               case 261:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddStates(566, 568);
                  break;
               case 262:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(569, 573);
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(256);
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(263, 256);
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(574, 576);
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(577, 580);
                  break;
               case 267:
                  if (curChar == 92)
                     jjCheckNAddStates(653, 656);
                  break;
               case 268:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(581, 584);
                  break;
               case 269:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(585, 591);
                  break;
               case 270:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(592, 594);
                  break;
               case 271:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(595, 598);
                  break;
               case 272:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(599, 603);
                  break;
               case 273:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(604, 609);
                  break;
               case 274:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(610, 614);
                  break;
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(615, 622);
                  break;
               case 276:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(623, 626);
                  break;
               case 277:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(627, 631);
                  break;
               case 278:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(632, 637);
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(638, 644);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 336:
               case 49:
               case 51:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 25)
                        kind = 25;
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAddStates(648, 652);
                  }
                  break;
               case 48:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 3:
               case 8:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 20:
               case 25:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(93, 96);
                  break;
               case 37:
               case 39:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 77:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(648, 652);
                  break;
               case 78:
               case 80:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(78, 79);
                  break;
               case 88:
               case 91:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(299, 301);
                  break;
               case 153:
               case 154:
               case 156:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(154, 155);
                  break;
               case 173:
               case 177:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(401, 404);
                  break;
               case 186:
               case 191:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(440, 443);
                  break;
               case 203:
               case 208:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(485, 488);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 335 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   152, 153, 164, 281, 282, 283, 284, 285, 286, 102, 287, 288, 289, 105, 290, 291, 
   292, 108, 293, 294, 295, 111, 296, 297, 298, 114, 299, 300, 301, 117, 302, 303, 
   304, 120, 305, 306, 307, 123, 308, 309, 310, 126, 311, 312, 313, 130, 314, 315, 
   316, 134, 317, 318, 319, 139, 320, 321, 322, 142, 323, 324, 325, 144, 326, 327, 
   328, 147, 329, 330, 331, 151, 332, 333, 334, 153, 164, 100, 101, 103, 106, 109, 
   112, 115, 118, 121, 124, 127, 131, 135, 140, 143, 145, 148, 152, 20, 21, 22, 
   24, 3, 4, 5, 7, 3, 10, 4, 5, 7, 11, 3, 12, 10, 4, 5, 
   7, 13, 14, 15, 3, 10, 4, 5, 7, 3, 12, 10, 4, 5, 7, 3, 
   12, 10, 4, 5, 7, 13, 3, 12, 10, 4, 5, 7, 13, 14, 20, 27, 
   21, 22, 24, 28, 20, 29, 27, 21, 22, 24, 30, 31, 32, 20, 27, 21, 
   22, 24, 20, 29, 27, 21, 22, 24, 20, 29, 27, 21, 22, 24, 30, 20, 
   29, 27, 21, 22, 24, 30, 31, 37, 41, 38, 42, 37, 43, 41, 38, 44, 
   45, 46, 37, 41, 38, 37, 43, 41, 38, 37, 43, 41, 38, 44, 37, 43, 
   41, 38, 44, 45, 49, 53, 50, 54, 49, 55, 53, 50, 56, 57, 58, 49, 
   53, 50, 49, 55, 53, 50, 49, 55, 53, 50, 56, 49, 55, 53, 50, 56, 
   57, 53, 49, 50, 61, 62, 53, 49, 50, 63, 64, 65, 53, 49, 50, 62, 
   53, 49, 50, 62, 53, 49, 50, 63, 62, 53, 49, 50, 63, 64, 78, 82, 
   79, 83, 78, 84, 82, 79, 85, 86, 87, 78, 82, 79, 78, 84, 82, 79, 
   78, 84, 82, 79, 85, 78, 84, 82, 79, 85, 86, 88, 89, 90, 88, 93, 
   89, 90, 94, 88, 95, 93, 89, 90, 96, 97, 98, 88, 93, 89, 90, 88, 
   95, 93, 89, 90, 88, 95, 93, 89, 90, 96, 88, 95, 93, 89, 90, 96, 
   97, 154, 158, 155, 159, 154, 160, 158, 155, 161, 162, 163, 154, 158, 155, 154, 
   160, 158, 155, 154, 160, 158, 155, 161, 154, 160, 158, 155, 161, 162, 158, 154, 
   155, 166, 167, 158, 154, 155, 168, 169, 170, 158, 154, 155, 167, 158, 154, 155, 
   167, 158, 154, 155, 168, 167, 158, 154, 155, 168, 169, 173, 185, 202, 175, 176, 
   219, 173, 174, 175, 176, 173, 175, 176, 179, 180, 173, 181, 175, 176, 179, 182, 
   183, 184, 173, 175, 176, 179, 173, 181, 175, 176, 179, 173, 181, 175, 176, 179, 
   182, 173, 181, 175, 176, 179, 182, 183, 186, 187, 188, 190, 186, 193, 187, 188, 
   190, 194, 186, 195, 193, 187, 188, 190, 196, 197, 198, 186, 193, 187, 188, 190, 
   186, 195, 193, 187, 188, 190, 186, 195, 193, 187, 188, 190, 196, 186, 195, 193, 
   187, 188, 190, 196, 197, 203, 204, 205, 207, 203, 210, 204, 205, 207, 211, 203, 
   212, 210, 204, 205, 207, 213, 214, 215, 203, 210, 204, 205, 207, 203, 212, 210, 
   204, 205, 207, 203, 212, 210, 204, 205, 207, 213, 203, 212, 210, 204, 205, 207, 
   213, 214, 173, 185, 202, 174, 175, 176, 219, 223, 229, 225, 226, 227, 228, 225, 
   226, 227, 230, 234, 238, 242, 246, 250, 225, 248, 249, 225, 251, 252, 253, 225, 
   251, 252, 233, 259, 260, 261, 233, 259, 260, 263, 256, 264, 265, 266, 263, 256, 
   264, 263, 256, 264, 265, 82, 78, 79, 269, 270, 82, 78, 79, 271, 272, 273, 
   82, 78, 79, 270, 82, 78, 79, 270, 82, 78, 79, 271, 270, 82, 78, 79, 
   271, 272, 93, 88, 89, 90, 275, 276, 93, 88, 89, 90, 277, 278, 279, 93, 
   88, 89, 90, 276, 93, 88, 89, 90, 276, 93, 88, 89, 90, 277, 276, 93, 
   88, 89, 90, 277, 278, 332, 153, 164, 78, 88, 89, 90, 79, 80, 268, 91, 
   274, 48, 59, 221, 222, 254, 6, 16, 18, 17, 8, 9, 23, 33, 35, 34, 
   25, 26, 39, 40, 177, 178, 189, 199, 201, 200, 191, 192, 206, 216, 218, 217, 
   208, 209, 
};
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\74\41\55\55", "\55\55\76", "\173", "\175", 
"\174\75", "\176\75", "\75", "\53", "\55", "\54", "\73", "\76", "\57", "\133", "\135", 
"\52", "\56", "\51", "\50", "\72", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "IN_COMMENT", 
};
public static final int[] jjnewLexState = {
   -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, 
};
static final long[] jjtoToken = {
   0xffffffdc03ffffe3L, 0xe00L, 
};
static final long[] jjtoSkip = {
   0x8L, 0x0L, 
};
static final long[] jjtoMore = {
   0x14L, 0x0L, 
};
private CharStream input_stream;
private final int[] jjrounds = new int[335];
private final int[] jjstateSet = new int[670];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public ParserTokenManager(CharStream stream)
{
   input_stream = stream;
}
public ParserTokenManager(CharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(CharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 335; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(CharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

private final Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public final Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 75)
         {
            jjmatchedKind = 75;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 4)
         {
            jjmatchedKind = 4;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

final void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
          image = Parser.SPACE;
         break;
      default : 
         break;
   }
}
}
